package com.xy.springboot.model.entity;

import com.baomidou.mybatisplus.annotation.IdType;
import com.baomidou.mybatisplus.annotation.TableField;
import com.baomidou.mybatisplus.annotation.TableId;
import com.baomidou.mybatisplus.annotation.TableName;
import java.io.Serializable;
import java.util.Date;
import lombok.Data;

/**
 * Vulnerability参数配置
 * @TableName vulnerability
 */
@TableName(value ="vulnerability")
@Data
public class Vulnerability implements Serializable {
    /**
     * id
     */
    @TableId(value = "id", type = IdType.AUTO)
    private Long id;

    /**
     * 任务id
     */
    @TableField(value = "taskId")
    private Long taskId;

    /**
     * 创建时间
     */
    @TableField(value = "createTime")
    private Date createTime;

    /**
     * 更新时间
     */
    @TableField(value = "updateTime")
    private Date updateTime;

    /**
     * 是否删除
     */
    @TableField(value = "isDelete")
    private Integer isDelete;

    /**
     * 用于生成易脆性的计算结果
     */
    @TableField(value = "Frgl_Op")
    private String frgl_Op;

    /**
     * 在计算幅值时忽略响应的前N秒/s
     */
    @TableField(value = "IniTI")
    private String iniTI;

    /**
     * 用于生成易脆性的响应的方向性
     */
    @TableField(value = "Frgl_Res")
    private String frgl_Res;

    /**
     * 是否计算叶片易脆性
     */
    @TableField(value = "Frgl_Bld")
    private String frgl_Bld;

    /**
     * 叶片损伤状态（位移角）
     */
    @TableField(value = "DS_Bld")
    private String DS_Bld;

    /**
     * 用于计算叶片易脆性的风速强度范围
     */
    @TableField(value = "IMI_Bld")
    private String IMI_Bld;

    /**
     * 是否计算机舱易脆性
     */
    @TableField(value = "Frgl_Nac")
    private String frgl_Nac;

    /**
     * 机舱损伤状态（加速度）
     */
    @TableField(value = "DS_Nac")
    private String DS_Nac;

    /**
     * 用于计算机舱易脆性的风速强度范围
     */
    @TableField(value = "IMI_Nac")
    private String IMI_Nac;

    /**
     * 是否计算塔筒易脆性
     */
    @TableField(value = "Frgl_Twr")
    private String frgl_Twr;

    /**
     * 塔筒损伤类型
     */
    @TableField(value = "DS_Twr_Type")
    private String DS_Twr_Type;

    /**
     * 塔筒损伤状态
     */
    @TableField(value = "DS_Twr")
    private String DS_Twr;

    /**
     * 用于计算塔筒易脆性的风速强度范围
     */
    @TableField(value = "IMI_Twr")
    private String IMI_Twr;

    /**
     * 是否计算下部结构易脆性
     */
    @TableField(value = "Frgl_Sub")
    private String frgl_Sub;

    /**
     * 下部结构损伤类型
     */
    @TableField(value = "DS_Sub_Type")
    private String DS_Sub_Type;

    /**
     * 下部结构损伤状态
     */
    @TableField(value = "DS_Sub")
    private String DS_Sub;

    /**
     * 用于计算下部结构易脆性的风速强度范围
     */
    @TableField(value = "IMI_Sub")
    private String IMI_Sub;

    /**
     * 易脆性曲线风速强度范围
     */
    @TableField(value = "HIF")
    private String HIF;

    /**
     * 易脆性曲线步长/s
     */
    @TableField(value = "dIM")
    private String dIM;

    /**
     * 每个风速强度的MCS数量
     */
    @TableField(value = "Num_RS")
    private String num_RS;

    /**
     * 叶片损伤状态相应的损失比
     */
    @TableField(value = "LossR_Bld")
    private String lossR_Bld;

    /**
     * 机舱损伤状态相应的损失比
     */
    @TableField(value = "LossR_Nac")
    private String lossR_Nac;

    /**
     * 塔筒损伤状态相应的损失比
     */
    @TableField(value = "LossR_Twr")
    private String lossR_Twr;

    /**
     * 单桩损伤状态相应的损失比
     */
    @TableField(value = "LossR_Mop")
    private String lossR_Mop;

    /**
     * 扫塔时塔筒和叶片损伤状态调为最严重
     */
    @TableField(value = "Dep_Bld")
    private String dep_Bld;

    /**
     * 机舱发生最严重损伤时叶片状态调为最严重
     */
    @TableField(value = "Dep_Nac")
    private String dep_Nac;

    /**
     * 塔筒发生最严重损伤时叶片和机舱状态调为最严重
     */
    @TableField(value = "Dep_Twr")
    private String dep_Twr;

    /**
     * 单桩发生最严重损伤时叶片，机舱和塔筒状态调为最严重
     */
    @TableField(value = "Dep_Mop")
    private String dep_Mop;

    @TableField(exist = false)
    private static final long serialVersionUID = 1L;

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        Vulnerability other = (Vulnerability) that;
        return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()))
            && (this.getTaskId() == null ? other.getTaskId() == null : this.getTaskId().equals(other.getTaskId()))
            && (this.getCreateTime() == null ? other.getCreateTime() == null : this.getCreateTime().equals(other.getCreateTime()))
            && (this.getUpdateTime() == null ? other.getUpdateTime() == null : this.getUpdateTime().equals(other.getUpdateTime()))
            && (this.getIsDelete() == null ? other.getIsDelete() == null : this.getIsDelete().equals(other.getIsDelete()))
            && (this.getFrgl_Op() == null ? other.getFrgl_Op() == null : this.getFrgl_Op().equals(other.getFrgl_Op()))
            && (this.getIniTI() == null ? other.getIniTI() == null : this.getIniTI().equals(other.getIniTI()))
            && (this.getFrgl_Res() == null ? other.getFrgl_Res() == null : this.getFrgl_Res().equals(other.getFrgl_Res()))
            && (this.getFrgl_Bld() == null ? other.getFrgl_Bld() == null : this.getFrgl_Bld().equals(other.getFrgl_Bld()))
            && (this.getDS_Bld() == null ? other.getDS_Bld() == null : this.getDS_Bld().equals(other.getDS_Bld()))
            && (this.getIMI_Bld() == null ? other.getIMI_Bld() == null : this.getIMI_Bld().equals(other.getIMI_Bld()))
            && (this.getFrgl_Nac() == null ? other.getFrgl_Nac() == null : this.getFrgl_Nac().equals(other.getFrgl_Nac()))
            && (this.getDS_Nac() == null ? other.getDS_Nac() == null : this.getDS_Nac().equals(other.getDS_Nac()))
            && (this.getIMI_Nac() == null ? other.getIMI_Nac() == null : this.getIMI_Nac().equals(other.getIMI_Nac()))
            && (this.getFrgl_Twr() == null ? other.getFrgl_Twr() == null : this.getFrgl_Twr().equals(other.getFrgl_Twr()))
            && (this.getDS_Twr_Type() == null ? other.getDS_Twr_Type() == null : this.getDS_Twr_Type().equals(other.getDS_Twr_Type()))
            && (this.getDS_Twr() == null ? other.getDS_Twr() == null : this.getDS_Twr().equals(other.getDS_Twr()))
            && (this.getIMI_Twr() == null ? other.getIMI_Twr() == null : this.getIMI_Twr().equals(other.getIMI_Twr()))
            && (this.getFrgl_Sub() == null ? other.getFrgl_Sub() == null : this.getFrgl_Sub().equals(other.getFrgl_Sub()))
            && (this.getDS_Sub_Type() == null ? other.getDS_Sub_Type() == null : this.getDS_Sub_Type().equals(other.getDS_Sub_Type()))
            && (this.getDS_Sub() == null ? other.getDS_Sub() == null : this.getDS_Sub().equals(other.getDS_Sub()))
            && (this.getIMI_Sub() == null ? other.getIMI_Sub() == null : this.getIMI_Sub().equals(other.getIMI_Sub()))
            && (this.getHIF() == null ? other.getHIF() == null : this.getHIF().equals(other.getHIF()))
            && (this.getdIM() == null ? other.getdIM() == null : this.getdIM().equals(other.getdIM()))
            && (this.getNum_RS() == null ? other.getNum_RS() == null : this.getNum_RS().equals(other.getNum_RS()))
            && (this.getLossR_Bld() == null ? other.getLossR_Bld() == null : this.getLossR_Bld().equals(other.getLossR_Bld()))
            && (this.getLossR_Nac() == null ? other.getLossR_Nac() == null : this.getLossR_Nac().equals(other.getLossR_Nac()))
            && (this.getLossR_Twr() == null ? other.getLossR_Twr() == null : this.getLossR_Twr().equals(other.getLossR_Twr()))
            && (this.getLossR_Mop() == null ? other.getLossR_Mop() == null : this.getLossR_Mop().equals(other.getLossR_Mop()))
            && (this.getDep_Bld() == null ? other.getDep_Bld() == null : this.getDep_Bld().equals(other.getDep_Bld()))
            && (this.getDep_Nac() == null ? other.getDep_Nac() == null : this.getDep_Nac().equals(other.getDep_Nac()))
            && (this.getDep_Twr() == null ? other.getDep_Twr() == null : this.getDep_Twr().equals(other.getDep_Twr()))
            && (this.getDep_Mop() == null ? other.getDep_Mop() == null : this.getDep_Mop().equals(other.getDep_Mop()));
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
        result = prime * result + ((getTaskId() == null) ? 0 : getTaskId().hashCode());
        result = prime * result + ((getCreateTime() == null) ? 0 : getCreateTime().hashCode());
        result = prime * result + ((getUpdateTime() == null) ? 0 : getUpdateTime().hashCode());
        result = prime * result + ((getIsDelete() == null) ? 0 : getIsDelete().hashCode());
        result = prime * result + ((getFrgl_Op() == null) ? 0 : getFrgl_Op().hashCode());
        result = prime * result + ((getIniTI() == null) ? 0 : getIniTI().hashCode());
        result = prime * result + ((getFrgl_Res() == null) ? 0 : getFrgl_Res().hashCode());
        result = prime * result + ((getFrgl_Bld() == null) ? 0 : getFrgl_Bld().hashCode());
        result = prime * result + ((getDS_Bld() == null) ? 0 : getDS_Bld().hashCode());
        result = prime * result + ((getIMI_Bld() == null) ? 0 : getIMI_Bld().hashCode());
        result = prime * result + ((getFrgl_Nac() == null) ? 0 : getFrgl_Nac().hashCode());
        result = prime * result + ((getDS_Nac() == null) ? 0 : getDS_Nac().hashCode());
        result = prime * result + ((getIMI_Nac() == null) ? 0 : getIMI_Nac().hashCode());
        result = prime * result + ((getFrgl_Twr() == null) ? 0 : getFrgl_Twr().hashCode());
        result = prime * result + ((getDS_Twr_Type() == null) ? 0 : getDS_Twr_Type().hashCode());
        result = prime * result + ((getDS_Twr() == null) ? 0 : getDS_Twr().hashCode());
        result = prime * result + ((getIMI_Twr() == null) ? 0 : getIMI_Twr().hashCode());
        result = prime * result + ((getFrgl_Sub() == null) ? 0 : getFrgl_Sub().hashCode());
        result = prime * result + ((getDS_Sub_Type() == null) ? 0 : getDS_Sub_Type().hashCode());
        result = prime * result + ((getDS_Sub() == null) ? 0 : getDS_Sub().hashCode());
        result = prime * result + ((getIMI_Sub() == null) ? 0 : getIMI_Sub().hashCode());
        result = prime * result + ((getHIF() == null) ? 0 : getHIF().hashCode());
        result = prime * result + ((getdIM() == null) ? 0 : getdIM().hashCode());
        result = prime * result + ((getNum_RS() == null) ? 0 : getNum_RS().hashCode());
        result = prime * result + ((getLossR_Bld() == null) ? 0 : getLossR_Bld().hashCode());
        result = prime * result + ((getLossR_Nac() == null) ? 0 : getLossR_Nac().hashCode());
        result = prime * result + ((getLossR_Twr() == null) ? 0 : getLossR_Twr().hashCode());
        result = prime * result + ((getLossR_Mop() == null) ? 0 : getLossR_Mop().hashCode());
        result = prime * result + ((getDep_Bld() == null) ? 0 : getDep_Bld().hashCode());
        result = prime * result + ((getDep_Nac() == null) ? 0 : getDep_Nac().hashCode());
        result = prime * result + ((getDep_Twr() == null) ? 0 : getDep_Twr().hashCode());
        result = prime * result + ((getDep_Mop() == null) ? 0 : getDep_Mop().hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", taskId=").append(taskId);
        sb.append(", createTime=").append(createTime);
        sb.append(", updateTime=").append(updateTime);
        sb.append(", isDelete=").append(isDelete);
        sb.append(", frgl_Op=").append(frgl_Op);
        sb.append(", iniTI=").append(iniTI);
        sb.append(", frgl_Res=").append(frgl_Res);
        sb.append(", frgl_Bld=").append(frgl_Bld);
        sb.append(", DS_Bld=").append(DS_Bld);
        sb.append(", IMI_Bld=").append(IMI_Bld);
        sb.append(", frgl_Nac=").append(frgl_Nac);
        sb.append(", DS_Nac=").append(DS_Nac);
        sb.append(", IMI_Nac=").append(IMI_Nac);
        sb.append(", frgl_Twr=").append(frgl_Twr);
        sb.append(", DS_Twr_Type=").append(DS_Twr_Type);
        sb.append(", DS_Twr=").append(DS_Twr);
        sb.append(", IMI_Twr=").append(IMI_Twr);
        sb.append(", frgl_Sub=").append(frgl_Sub);
        sb.append(", DS_Sub_Type=").append(DS_Sub_Type);
        sb.append(", DS_Sub=").append(DS_Sub);
        sb.append(", IMI_Sub=").append(IMI_Sub);
        sb.append(", HIF=").append(HIF);
        sb.append(", dIM=").append(dIM);
        sb.append(", num_RS=").append(num_RS);
        sb.append(", lossR_Bld=").append(lossR_Bld);
        sb.append(", lossR_Nac=").append(lossR_Nac);
        sb.append(", lossR_Twr=").append(lossR_Twr);
        sb.append(", lossR_Mop=").append(lossR_Mop);
        sb.append(", dep_Bld=").append(dep_Bld);
        sb.append(", dep_Nac=").append(dep_Nac);
        sb.append(", dep_Twr=").append(dep_Twr);
        sb.append(", dep_Mop=").append(dep_Mop);
        sb.append(", serialVersionUID=").append(serialVersionUID);
        sb.append("]");
        return sb.toString();
    }
}